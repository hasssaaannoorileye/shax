{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/Board.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport type { Board, Position } from \"@/types/types\"\r\nimport { motion } from \"framer-motion\"\r\n\r\ninterface BoardProps {\r\n  board: Board\r\n  onCellClick: (row: number, col: number) => void\r\n  selectedPiece: Position | null\r\n  currentPlayer: number\r\n  validMoves: Position[]\r\n  capturablePositions: Position[]\r\n  lastMove: Position[]\r\n}\r\n\r\nconst BoardComponent: React.FC<BoardProps> = ({\r\n  board,\r\n  onCellClick,\r\n  selectedPiece,\r\n  currentPlayer,\r\n  validMoves,\r\n  capturablePositions,\r\n  lastMove,\r\n}) => {\r\n  // Helper function to check if a position is in an array of positions\r\n  const isPositionIn = (pos: [number, number], positions: Position[]): boolean => {\r\n    return positions.some(([r, c]) => r === pos[0] && c === pos[1])\r\n  }\r\n\r\n  // Helper function to check if a position is part of the last move\r\n  const isLastMove = (row: number, col: number): boolean => {\r\n    return lastMove.some(([r, c]) => r === row && c === col)\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative mx-auto\">\r\n      <div className=\"grid grid-cols-5 gap-1 md:gap-2 w-full max-w-[500px] aspect-square mx-auto rounded-xl bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-800 dark:to-gray-900 p-4 shadow-2xl ring-2 ring-primary/10\">\r\n        {board.map((row, rowIndex) =>\r\n          row.map((cell, colIndex) => {\r\n            const isSelected = selectedPiece && selectedPiece[0] === rowIndex && selectedPiece[1] === colIndex\r\n            const isValidMoveOrigin = isPositionIn([rowIndex, colIndex], validMoves)\r\n            const isCapturableOrigin = isPositionIn([rowIndex, colIndex], capturablePositions)\r\n            const isPartOfLastMove = isLastMove(rowIndex, colIndex)\r\n\r\n            return (\r\n              <motion.div\r\n                key={`${rowIndex}-${colIndex}`}\r\n                className={`\r\n                  relative flex items-center justify-center aspect-square rounded-md cursor-pointer transition-all duration-200\r\n                  ${\r\n                    cell === 0\r\n                      ? \"bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                      : cell === 1\r\n                        ? \"bg-black hover:bg-gray-900\"\r\n                        : \"bg-white hover:bg-gray-100\"\r\n                  }\r\n                  ${isSelected ? \"ring-2 ring-blue-500 dark:ring-blue-400 z-10\" : \"\"}\r\n                  ${isValidMoveOrigin ? \"ring-2 ring-yellow-400 dark:ring-yellow-300\" : \"\"}\r\n                  ${isCapturableOrigin ? \"ring-2 ring-red-500 dark:ring-red-400\" : \"\"}\r\n                  ${isPartOfLastMove ? \"ring-2 ring-green-500 dark:ring-green-400\" : \"\"}\r\n                `}\r\n                onClick={() => onCellClick(rowIndex, colIndex)}\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n                initial={isPartOfLastMove ? { scale: 1.1 } : { scale: 1 }}\r\n                animate={isPartOfLastMove ? { scale: 1 } : { scale: 1 }}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                {cell !== 0 && (\r\n                  <motion.div\r\n                    className={`\r\n                      w-3/4 h-3/4 rounded-full flex items-center justify-center\r\n                      ${cell === 1 ? \"bg-black border-2 border-gray-700\" : \"bg-white border-2 border-gray-300\"}\r\n                    `}\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\r\n                  >\r\n                    <div\r\n                      className={`\r\n                        w-1/2 h-1/2 rounded-full \r\n                        ${cell === 1 ? \"bg-gray-700 border border-gray-600\" : \"bg-gray-300 border border-gray-400\"}\r\n                      `}\r\n                    />\r\n                  </motion.div>\r\n                )}\r\n\r\n                {/* Coordinate labels */}\r\n                <div className=\"absolute bottom-0 right-1 text-[8px] md:text-xs opacity-50\">\r\n                  {rowIndex + 1},{colIndex + 1}\r\n                </div>\r\n              </motion.div>\r\n            )\r\n          }),\r\n        )}\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"mt-4 grid grid-cols-2 gap-2 text-xs\">\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-yellow-400\"></div>\r\n          <span>Valid Move</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\r\n          <span>Capture Available</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\r\n          <span>Selected Piece</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\r\n          <span>Last Move</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardComponent"],"names":[],"mappings":";;;;AAKA;AALA;;;AAiBA,MAAM,iBAAuC,CAAC,EAC5C,KAAK,EACL,WAAW,EACX,aAAa,EACb,aAAa,EACb,UAAU,EACV,mBAAmB,EACnB,QAAQ,EACT;IACC,qEAAqE;IACrE,MAAM,eAAe,CAAC,KAAuB;QAC3C,OAAO,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK,MAAM,GAAG,CAAC,EAAE,IAAI,MAAM,GAAG,CAAC,EAAE;IAChE;IAEA,kEAAkE;IAClE,MAAM,aAAa,CAAC,KAAa;QAC/B,OAAO,SAAS,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK,MAAM,OAAO,MAAM;IACtD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,KAAK,WACf,IAAI,GAAG,CAAC,CAAC,MAAM;wBACb,MAAM,aAAa,iBAAiB,aAAa,CAAC,EAAE,KAAK,YAAY,aAAa,CAAC,EAAE,KAAK;wBAC1F,MAAM,oBAAoB,aAAa;4BAAC;4BAAU;yBAAS,EAAE;wBAC7D,MAAM,qBAAqB,aAAa;4BAAC;4BAAU;yBAAS,EAAE;wBAC9D,MAAM,mBAAmB,WAAW,UAAU;wBAE9C,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BAET,WAAW,CAAC;;kBAEV,EACE,SAAS,IACL,0EACA,SAAS,IACP,+BACA,6BACP;kBACD,EAAE,aAAa,iDAAiD,GAAG;kBACnE,EAAE,oBAAoB,gDAAgD,GAAG;kBACzE,EAAE,qBAAqB,0CAA0C,GAAG;kBACpE,EAAE,mBAAmB,8CAA8C,GAAG;gBACxE,CAAC;4BACD,SAAS,IAAM,YAAY,UAAU;4BACrC,YAAY;gCAAE,OAAO;4BAAK;4BAC1B,UAAU;gCAAE,OAAO;4BAAK;4BACxB,SAAS,mBAAmB;gCAAE,OAAO;4BAAI,IAAI;gCAAE,OAAO;4BAAE;4BACxD,SAAS,mBAAmB;gCAAE,OAAO;4BAAE,IAAI;gCAAE,OAAO;4BAAE;4BACtD,YAAY;gCAAE,UAAU;4BAAI;;gCAE3B,SAAS,mBACR,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,WAAW,CAAC;;sBAEV,EAAE,SAAS,IAAI,sCAAsC,oCAAoC;oBAC3F,CAAC;oCACD,SAAS;wCAAE,OAAO;oCAAE;oCACpB,SAAS;wCAAE,OAAO;oCAAE;oCACpB,YAAY;wCAAE,MAAM;wCAAU,WAAW;wCAAK,SAAS;oCAAG;8CAE1D,cAAA,8OAAC;wCACC,WAAW,CAAC;;wBAEV,EAAE,SAAS,IAAI,uCAAuC,qCAAqC;sBAC7F,CAAC;;;;;;;;;;;8CAMP,8OAAC;oCAAI,WAAU;;wCACZ,WAAW;wCAAE;wCAAE,WAAW;;;;;;;;2BA3CxB,GAAG,SAAS,CAAC,EAAE,UAAU;;;;;oBA+CpC;;;;;;0BAKJ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;;;;;;;;;;;;;AAKhB;uCAEe","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/Game.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport BoardComponent from '@/components/Board';\r\nimport { Board, Position } from '@/types/types';\r\nimport { useState, useEffect } from 'react';\r\nimport { FaCircle, FaDotCircle } from 'react-icons/fa';\r\nimport useSound from 'use-sound';\r\n\r\ntype Player = {\r\n  id: number;\r\n  name: string;\r\n  icon: React.ElementType;\r\n  score: number;\r\n};\r\n\r\nconst initialBoard: Board = [\r\n  [1, 1, 1, 1, 1],\r\n  [1, 1, 1, 1, 1],\r\n  [1, 1, 0, 2, 2],\r\n  [2, 2, 2, 2, 2],\r\n  [2, 2, 2, 2, 2],\r\n];\r\n\r\nconst Game: React.FC = () => {\r\n  const [board, setBoard] = useState<Board>(initialBoard);\r\n  const [currentPlayer, setCurrentPlayer] = useState<number>(1);\r\n  const [selectedPiece, setSelectedPiece] = useState<Position | null>(null);\r\n  const [winner, setWinner] = useState<number | null>(null);\r\n  const [scores, setScores] = useState<{ [key: number]: number }>({ 1: 0, 2: 0 });\r\n  const [moveHistory, setMoveHistory] = useState<string[]>([]);\r\n  const [timer, setTimer] = useState<number>(0);\r\n  const [isTimerRunning, setIsTimerRunning] = useState<boolean>(false);\r\n  const [showSettings, setShowSettings] = useState<boolean>(true); // Show settings modal initially\r\n  const [players, setPlayers] = useState<Player[]>([\r\n    {\r\n      id: 1,\r\n      name: \"Hassan\",\r\n      icon: FaCircle,\r\n      score: 0,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Hussain\",\r\n      icon: FaDotCircle,\r\n      score: 0,\r\n    },\r\n  ]);\r\n  const [firstPlayer, setFirstPlayer] = useState<number>(1); // Default to Player 1\r\n\r\n  const [playMove] = useSound('/sounds/move.mp3', { volume: 0.5 });\r\n  const [playCapture] = useSound('/sounds/capture.mp3', { volume: 0.5 });\r\n  const [playWin] = useSound('/sounds/win.mp3', { volume: 0.5 });\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (isTimerRunning) {\r\n      interval = setInterval(() => {\r\n        setTimer((prev) => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isTimerRunning]);\r\n\r\n  const player1Pieces = board.flat().filter((cell) => cell === 1).length;\r\n  const player2Pieces = board.flat().filter((cell) => cell === 2).length;\r\n\r\n  const isValidMove = (\r\n    board: Board,\r\n    fromRow: number,\r\n    fromCol: number,\r\n    toRow: number,\r\n    toCol: number,\r\n    player: number\r\n  ): boolean => {\r\n    if (board[toRow][toCol] !== 0) return false;\r\n\r\n    const rowDiff = Math.abs(toRow - fromRow);\r\n    const colDiff = Math.abs(toCol - fromCol);\r\n\r\n    if ((rowDiff === 1 && colDiff === 0) || (rowDiff === 0 && colDiff === 1)) {\r\n      return true;\r\n    }\r\n\r\n    if ((rowDiff === 2 && colDiff === 0) || (rowDiff === 0 && colDiff === 2)) {\r\n      const midRow = (fromRow + toRow) / 2;\r\n      const midCol = (fromCol + toCol) / 2;\r\n      const midPiece = board[midRow][midCol];\r\n\r\n      return midPiece !== 0 && midPiece !== player;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const hasValidMoves = (board: Board, currentPlayer: number): boolean => {\r\n    for (let row = 0; row < board.length; row++) {\r\n      for (let col = 0; col < board[row].length; col++) {\r\n        if (board[row][col] === currentPlayer) {\r\n          const moves = [\r\n            [row + 1, col], // Down\r\n            [row - 1, col], // Up\r\n            [row, col + 1], // Right\r\n            [row, col - 1], // Left\r\n            [row + 2, col], // Jump Down\r\n            [row - 2, col], // Jump Up\r\n            [row, col + 2], // Jump Right\r\n            [row, col - 2], // Jump Left\r\n          ];\r\n\r\n          for (const [toRow, toCol] of moves) {\r\n            if (\r\n              toRow >= 0 &&\r\n              toRow < board.length &&\r\n              toCol >= 0 &&\r\n              toCol < board[row].length &&\r\n              isValidMove(board, row, col, toRow, toCol, currentPlayer)\r\n            ) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleCellClick = (row: number, col: number) => {\r\n    if (winner) return;\r\n\r\n    const newBoard = board.map(row => [...row]);\r\n\r\n    if (selectedPiece) {\r\n      const [fromRow, fromCol] = selectedPiece;\r\n\r\n      if (isValidMove(newBoard, fromRow, fromCol, row, col, currentPlayer)) {\r\n        newBoard[row][col] = currentPlayer;\r\n        newBoard[fromRow][fromCol] = 0;\r\n\r\n        const rowDiff = Math.abs(row - fromRow);\r\n        const colDiff = Math.abs(col - fromCol);\r\n        let captured = false;\r\n\r\n        if ((rowDiff === 2 && colDiff === 0) || (rowDiff === 0 && colDiff === 2)) {\r\n          const midRow = (fromRow + row) / 2;\r\n          const midCol = (fromCol + col) / 2;\r\n          newBoard[midRow][midCol] = 0;\r\n          captured = true;\r\n\r\n          setScores((prev) => ({\r\n            ...prev,\r\n            [currentPlayer]: prev[currentPlayer] + 1,\r\n          }));\r\n\r\n          playCapture();\r\n        } else {\r\n          playMove();\r\n        }\r\n\r\n        setBoard(newBoard);\r\n\r\n        setMoveHistory((prev) => [\r\n          ...prev,\r\n          `Player ${currentPlayer} moved from (${fromRow}, ${fromCol}) to (${row}, ${col})`,\r\n        ]);\r\n\r\n        const gameWinner = checkWinner(newBoard);\r\n        if (gameWinner) {\r\n          setWinner(gameWinner);\r\n          playWin();\r\n          setIsTimerRunning(false);\r\n        } else {\r\n          // Check if another capture is possible\r\n          if (captured && hasValidJumpMoves(newBoard, row, col, currentPlayer)) {\r\n            setSelectedPiece([row, col]); // Allow another move\r\n          } else {\r\n            setSelectedPiece(null);\r\n            const nextPlayer = currentPlayer === 1 ? 2 : 1;\r\n            if (!hasValidMoves(newBoard, nextPlayer)) {\r\n              setCurrentPlayer(currentPlayer);\r\n            } else {\r\n              setCurrentPlayer(nextPlayer);\r\n              setIsTimerRunning(true);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        setSelectedPiece(null);\r\n      }\r\n    } else {\r\n      if (newBoard[row][col] === currentPlayer) {\r\n        setSelectedPiece([row, col]);\r\n        setIsTimerRunning(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkWinner = (board: Board): number | null => {\r\n    if (player1Pieces === 0) return 2;\r\n    if (player2Pieces === 0) return 1;\r\n    return null;\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setBoard(initialBoard);\r\n    setCurrentPlayer(firstPlayer); // Reset to selected first player\r\n    setSelectedPiece(null);\r\n    setWinner(null);\r\n    setScores({ 1: 0, 2: 0 });\r\n    setMoveHistory([]);\r\n    setTimer(0);\r\n    setIsTimerRunning(false);\r\n  };\r\n\r\n  const hasValidJumpMoves = (board: Board, row: number, col: number, player: number): boolean => {\r\n    const jumpMoves = [\r\n      [row + 2, col], // Jump Down\r\n      [row - 2, col], // Jump Up\r\n      [row, col + 2], // Jump Right\r\n      [row, col - 2], // Jump Left\r\n    ];\r\n\r\n    return jumpMoves.some(([toRow, toCol]) => {\r\n      if (\r\n        toRow >= 0 &&\r\n        toRow < board.length &&\r\n        toCol >= 0 &&\r\n        toCol < board[row].length\r\n      ) {\r\n        return isValidMove(board, row, col, toRow, toCol, player);\r\n      }\r\n      return false;\r\n    });\r\n  };\r\n\r\n  const handleSettingsSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.currentTarget);\r\n    const player1Name = formData.get('player1Name') as string;\r\n    const player2Name = formData.get('player2Name') as string;\r\n    const firstPlayer = parseInt(formData.get('firstPlayer') as string);\r\n\r\n    setPlayers([\r\n      { id: 1, name: player1Name, icon: FaCircle, score: 0 },\r\n      { id: 2, name: player2Name, icon: FaDotCircle, score: 0 },\r\n    ]);\r\n    setFirstPlayer(firstPlayer);\r\n    setCurrentPlayer(firstPlayer); // Set the first player\r\n    setShowSettings(false); // Hide settings modal\r\n  };\r\n\r\n  const getValidMoves = (board: Board, currentPlayer: number): { validMoves: Position[], capturablePositions: Position[] } => {\r\n    let validMoves: Position[] = [];\r\n    let capturablePositions: Position[] = [];\r\n\r\n    board.forEach((row, rowIndex) => {\r\n      row.forEach((cell, colIndex) => {\r\n        if (cell === currentPlayer) {\r\n          // Check adjacent cells (up, down, left, right)\r\n          const directions = [\r\n            [1, 0], [-1, 0], [0, 1], [0, -1] // Down, Up, Right, Left\r\n          ];\r\n\r\n          directions.forEach(([dx, dy]) => {\r\n            const newRow = rowIndex + dx;\r\n            const newCol = colIndex + dy;\r\n            const jumpRow = rowIndex + 2 * dx;\r\n            const jumpCol = colIndex + 2 * dy;\r\n\r\n            if (\r\n              newRow >= 0 &&\r\n              newRow < board.length &&\r\n              newCol >= 0 &&\r\n              newCol < row.length\r\n            ) {\r\n              if (board[newRow][newCol] === 0) {\r\n                // Normal move\r\n                validMoves.push([rowIndex, colIndex]);\r\n              } else if (\r\n                board[newRow][newCol] !== currentPlayer && // Opponent piece\r\n                jumpRow >= 0 &&\r\n                jumpRow < board.length &&\r\n                jumpCol >= 0 &&\r\n                jumpCol < row.length &&\r\n                board[jumpRow][jumpCol] === 0 // Empty space after opponent\r\n              ) {\r\n                // Capture move\r\n                capturablePositions.push([rowIndex, colIndex]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    return { validMoves, capturablePositions };\r\n  };\r\n\r\n  const [validMoves, setValidMoves] = useState<Position[]>([]);\r\n  const [capturablePositions, setCapturablePositions] = useState<Position[]>([]);\r\n\r\n  useEffect(() => {\r\n    const { validMoves, capturablePositions } = getValidMoves(board, currentPlayer);\r\n    setValidMoves(validMoves);\r\n    setCapturablePositions(capturablePositions);\r\n  }, [board, currentPlayer]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      {showSettings ? (\r\n        <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Game Settings</h2>\r\n          <form onSubmit={handleSettingsSubmit}>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Player 1 Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"player1Name\"\r\n                defaultValue={players[0].name}\r\n                className=\"w-full p-2 border rounded-lg\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">Player 2 Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"player2Name\"\r\n                defaultValue={players[1].name}\r\n                className=\"w-full p-2 border rounded-lg\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm font-medium mb-1\">First Player</label>\r\n              <select\r\n                name=\"firstPlayer\"\r\n                defaultValue={firstPlayer}\r\n                className=\"w-full p-2 border rounded-lg\"\r\n                required\r\n              >\r\n                <option value={1}>Player 1</option>\r\n                <option value={2}>Player 2</option>\r\n              </select>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n            >\r\n              Start Game\r\n            </button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-3xl font-bold mb-4\">Kor-u-Boodo Shax</h1>\r\n          <p className=\"text-lg mb-4\">\r\n            {winner ? (\r\n              <span className=\"text-green-600 font-bold text-2xl\">\r\n                Player {winner} Wins!\r\n              </span>\r\n            ) : (\r\n              <span\r\n                className={`font-bold ${currentPlayer === 1 ? 'text-black' : 'text-gray-600'\r\n                  }`}\r\n              >\r\n                Current Player: {players[currentPlayer - 1].name}\r\n              </span>\r\n            )}\r\n          </p>\r\n          <div className=\"flex gap-4 mb-4\">\r\n            {players.map((player) => (\r\n              <div key={player.id} className=\"flex items-center gap-2\">\r\n                <player.icon className=\"text-[#000000] text-2xl\" />\r\n                <span>{scores[player.id]}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <BoardComponent\r\n            board={board}\r\n            validMoves={validMoves}\r\n            capturablePositions={capturablePositions}\r\n            onCellClick={handleCellClick}\r\n            currentPlayer={currentPlayer}\r\n            selectedPiece={selectedPiece} />\r\n          <div className=\"mt-4 w-96\">\r\n            <h2 className=\"text-xl font-bold mb-2\">Move History</h2>\r\n            <div className=\"h-32 overflow-y-auto border p-2\">\r\n              {moveHistory.map((move, index) => (\r\n                <div key={index} className=\"text-sm\">\r\n                  {move}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <p className=\"text-lg mb-4\">\r\n            Timer: {Math.floor(timer / 60)}:{timer % 60 < 10 ? `0${timer % 60}` : timer % 60}\r\n          </p>\r\n          <div className=\"flex gap-4\">\r\n            <button onClick={restartGame} className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-lg\">\r\n              Restart Game\r\n            </button>\r\n            <button\r\n              onClick={() => setShowSettings(true)}\r\n              className=\"mt-4 px-4 py-2 bg-gray-500 text-white rounded-lg\"\r\n            >\r\n              Edit Settings\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 918, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport Game from \"@/components/Game\"\n\n\nexport default function HomePage() {\n  return (\n    <main className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\n      <Game />\n    </main>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,0HAAA,CAAA,UAAI;;;;;;;;;;AAGX","debugId":null}}]
}