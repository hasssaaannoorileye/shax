{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/Board.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport type { Board, Position } from \"@/types/types\"\r\nimport { motion } from \"framer-motion\"\r\n\r\ninterface BoardProps {\r\n  board: Board\r\n  onCellClick: (row: number, col: number) => void\r\n  selectedPiece: Position | null\r\n  currentPlayer: number\r\n  validMoves: Position[]\r\n  capturablePositions: Position[]\r\n  lastMove: Position[]\r\n}\r\n\r\nconst BoardComponent: React.FC<BoardProps> = ({\r\n  board,\r\n  onCellClick,\r\n  selectedPiece,\r\n  currentPlayer,\r\n  validMoves,\r\n  capturablePositions,\r\n  lastMove,\r\n}) => {\r\n  // Helper function to check if a position is in an array of positions\r\n  const isPositionIn = (pos: [number, number], positions: Position[]): boolean => {\r\n    return positions.some(([r, c]) => r === pos[0] && c === pos[1])\r\n  }\r\n\r\n  // Helper function to check if a position is part of the last move\r\n  const isLastMove = (row: number, col: number): boolean => {\r\n    return lastMove.some(([r, c]) => r === row && c === col)\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative mx-auto\">\r\n      <div className=\"grid grid-cols-5 gap-1 md:gap-2 w-full max-w-[500px] aspect-square mx-auto rounded-xl bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-800 dark:to-gray-900 p-4 shadow-2xl ring-2 ring-primary/10\">\r\n        {board.map((row, rowIndex) =>\r\n          row.map((cell, colIndex) => {\r\n            const isSelected = selectedPiece && selectedPiece[0] === rowIndex && selectedPiece[1] === colIndex\r\n            const isValidMoveOrigin = isPositionIn([rowIndex, colIndex], validMoves)\r\n            const isCapturableOrigin = isPositionIn([rowIndex, colIndex], capturablePositions)\r\n            const isPartOfLastMove = isLastMove(rowIndex, colIndex)\r\n\r\n            return (\r\n              <motion.div\r\n                key={`${rowIndex}-${colIndex}`}\r\n                className={`\r\n                  relative flex items-center justify-center aspect-square rounded-md cursor-pointer transition-all duration-200\r\n                  ${\r\n                    cell === 0\r\n                      ? \"bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                      : cell === 1\r\n                        ? \"bg-black hover:bg-gray-900\"\r\n                        : \"bg-white hover:bg-gray-100\"\r\n                  }\r\n                  ${isSelected ? \"ring-2 ring-blue-500 dark:ring-blue-400 z-10\" : \"\"}\r\n                  ${isValidMoveOrigin ? \"ring-2 ring-yellow-400 dark:ring-yellow-300\" : \"\"}\r\n                  ${isCapturableOrigin ? \"ring-2 ring-red-500 dark:ring-red-400\" : \"\"}\r\n                  ${isPartOfLastMove ? \"ring-2 ring-green-500 dark:ring-green-400\" : \"\"}\r\n                `}\r\n                onClick={() => onCellClick(rowIndex, colIndex)}\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n                initial={isPartOfLastMove ? { scale: 1.1 } : { scale: 1 }}\r\n                animate={isPartOfLastMove ? { scale: 1 } : { scale: 1 }}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                {cell !== 0 && (\r\n                  <motion.div\r\n                    className={`\r\n                      w-3/4 h-3/4 rounded-full flex items-center justify-center\r\n                      ${cell === 1 ? \"bg-black border-2 border-gray-700\" : \"bg-white border-2 border-gray-300\"}\r\n                    `}\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\r\n                  >\r\n                    <div\r\n                      className={`\r\n                        w-1/2 h-1/2 rounded-full \r\n                        ${cell === 1 ? \"bg-gray-700 border border-gray-600\" : \"bg-gray-300 border border-gray-400\"}\r\n                      `}\r\n                    />\r\n                  </motion.div>\r\n                )}\r\n\r\n                {/* Coordinate labels */}\r\n                <div className=\"absolute bottom-0 right-1 text-[8px] md:text-xs opacity-50\">\r\n                  {rowIndex + 1},{colIndex + 1}\r\n                </div>\r\n              </motion.div>\r\n            )\r\n          }),\r\n        )}\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"mt-4 grid grid-cols-2 gap-2 text-xs\">\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-yellow-400\"></div>\r\n          <span>Valid Move</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\r\n          <span>Capture Available</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\r\n          <span>Selected Piece</span>\r\n        </div>\r\n        <div className=\"flex items-center gap-1\">\r\n          <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\r\n          <span>Last Move</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardComponent"],"names":[],"mappings":";;;;AAKA;AALA;;;AAiBA,MAAM,iBAAuC,CAAC,EAC5C,KAAK,EACL,WAAW,EACX,aAAa,EACb,aAAa,EACb,UAAU,EACV,mBAAmB,EACnB,QAAQ,EACT;IACC,qEAAqE;IACrE,MAAM,eAAe,CAAC,KAAuB;QAC3C,OAAO,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK,MAAM,GAAG,CAAC,EAAE,IAAI,MAAM,GAAG,CAAC,EAAE;IAChE;IAEA,kEAAkE;IAClE,MAAM,aAAa,CAAC,KAAa;QAC/B,OAAO,SAAS,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK,MAAM,OAAO,MAAM;IACtD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,KAAK,WACf,IAAI,GAAG,CAAC,CAAC,MAAM;wBACb,MAAM,aAAa,iBAAiB,aAAa,CAAC,EAAE,KAAK,YAAY,aAAa,CAAC,EAAE,KAAK;wBAC1F,MAAM,oBAAoB,aAAa;4BAAC;4BAAU;yBAAS,EAAE;wBAC7D,MAAM,qBAAqB,aAAa;4BAAC;4BAAU;yBAAS,EAAE;wBAC9D,MAAM,mBAAmB,WAAW,UAAU;wBAE9C,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BAET,WAAW,CAAC;;kBAEV,EACE,SAAS,IACL,0EACA,SAAS,IACP,+BACA,6BACP;kBACD,EAAE,aAAa,iDAAiD,GAAG;kBACnE,EAAE,oBAAoB,gDAAgD,GAAG;kBACzE,EAAE,qBAAqB,0CAA0C,GAAG;kBACpE,EAAE,mBAAmB,8CAA8C,GAAG;gBACxE,CAAC;4BACD,SAAS,IAAM,YAAY,UAAU;4BACrC,YAAY;gCAAE,OAAO;4BAAK;4BAC1B,UAAU;gCAAE,OAAO;4BAAK;4BACxB,SAAS,mBAAmB;gCAAE,OAAO;4BAAI,IAAI;gCAAE,OAAO;4BAAE;4BACxD,SAAS,mBAAmB;gCAAE,OAAO;4BAAE,IAAI;gCAAE,OAAO;4BAAE;4BACtD,YAAY;gCAAE,UAAU;4BAAI;;gCAE3B,SAAS,mBACR,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;oCACT,WAAW,CAAC;;sBAEV,EAAE,SAAS,IAAI,sCAAsC,oCAAoC;oBAC3F,CAAC;oCACD,SAAS;wCAAE,OAAO;oCAAE;oCACpB,SAAS;wCAAE,OAAO;oCAAE;oCACpB,YAAY;wCAAE,MAAM;wCAAU,WAAW;wCAAK,SAAS;oCAAG;8CAE1D,cAAA,8OAAC;wCACC,WAAW,CAAC;;wBAEV,EAAE,SAAS,IAAI,uCAAuC,qCAAqC;sBAC7F,CAAC;;;;;;;;;;;8CAMP,8OAAC;oCAAI,WAAU;;wCACZ,WAAW;wCAAE;wCAAE,WAAW;;;;;;;;2BA3CxB,GAAG,SAAS,CAAC,EAAE,UAAU;;;;;oBA+CpC;;;;;;0BAKJ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;kCAER,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;0CAAK;;;;;;;;;;;;;;;;;;;;;;;;AAKhB;uCAEe","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/lib/utils.ts"],"sourcesContent":["export function cn(...classes: (string | boolean | undefined | null)[]): string {\r\n    return classes.filter(Boolean).join(\" \");\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS,GAAG,GAAG,OAAgD;IAClE,OAAO,QAAQ,MAAM,CAAC,SAAS,IAAI,CAAC;AACxC","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/ui/card.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\nimport * as React from \"react\"\r\n\r\n\r\nconst Card = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\r\n            \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n        {...props}\r\n    />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n    <h3\r\n        ref={ref}\r\n        className={cn(\r\n            \"text-2xl font-semibold leading-none tracking-tight\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n    <p\r\n        ref={ref}\r\n        className={cn(\"text-sm text-muted-foreground\", className)}\r\n        {...props}\r\n    />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex items-center p-6 pt-0\", className)}\r\n        {...props}\r\n    />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAGA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,4DACA;QAEH,GAAG,KAAK;;;;;;AAGjB,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGjB,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,sDACA;QAEH,GAAG,KAAK;;;;;;AAGjB,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGjB,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAElE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGjB,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/player-card.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport type { Player } from \"@/types/player\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Circle, Trophy, Clock, User, Bot } from \"lucide-react\"\r\n\r\ninterface PlayerCardProps {\r\n  player: Player\r\n  isActive: boolean\r\n  remainingTime: number | null\r\n}\r\n\r\nconst PlayerCard: React.FC<PlayerCardProps> = ({ player, isActive, remainingTime }) => {\r\n  // Format time as MM:SS\r\n  const formatTime = (seconds: number): string => {\r\n    const minutes = Math.floor(seconds / 60)\r\n    const secs = seconds % 60\r\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`\r\n  }\r\n\r\n  // Calculate time warning levels\r\n  const getTimeColor = (seconds: number): string => {\r\n    if (seconds <= 10) return \"text-red-500\"\r\n    if (seconds <= 30) return \"text-orange-500\"\r\n    if (seconds <= 60) return \"text-yellow-500\"\r\n    return \"text-green-500\"\r\n  }\r\n\r\n  return (\r\n    <Card className={`overflow-hidden transition-all duration-300 ${isActive ? \"ring-2 ring-primary\" : \"\"}`}>\r\n      <motion.div\r\n        className={`h-2 bg-primary ${isActive ? \"opacity-100\" : \"opacity-0\"}`}\r\n        initial={{ width: \"0%\" }}\r\n        animate={{ width: isActive ? \"100%\" : \"0%\" }}\r\n        transition={{ duration: 2, repeat: isActive ? Number.POSITIVE_INFINITY : 0 }}\r\n      />\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-3\">\r\n            {player.avatar ? (\r\n              <img\r\n                src={player.avatar || \"/placeholder.svg\"}\r\n                alt={player.name}\r\n                className=\"w-10 h-10 rounded-full object-cover\"\r\n              />\r\n            ) : (\r\n              <div\r\n                className={`w-10 h-10 rounded-full flex items-center justify-center ${player.color === \"black\" ? \"bg-black\" : \"bg-white border border-gray-300\"}`}\r\n              >\r\n                <Circle className={`w-5 h-5 ${player.color === \"black\" ? \"text-white\" : \"text-black\"}`} />\r\n              </div>\r\n            )}\r\n            <div>\r\n              <div className=\"flex items-center gap-1\">\r\n                <h3 className=\"font-bold\">{player.name}</h3>\r\n                {player.isAI && <Bot className=\"h-3 w-3 text-muted-foreground\" />}\r\n              </div>\r\n              <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n                <span>Captures: {player.score}</span>\r\n                {player.stats?.gamesWon ? (\r\n                  <span className=\"flex items-center gap-1\">\r\n                    <Trophy className=\"h-3 w-3\" /> {player.stats.gamesWon}\r\n                  </span>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {remainingTime !== null && (\r\n            <div className={`text-xl font-mono font-bold ${getTimeColor(remainingTime)}`}>\r\n              {formatTime(remainingTime)}\r\n            </div>\r\n          )}\r\n\r\n          {isActive && (\r\n            <motion.div\r\n              className=\"absolute top-2 right-2 w-3 h-3 rounded-full bg-green-500\"\r\n              animate={{ scale: [1, 1.2, 1] }}\r\n              transition={{ repeat: Number.POSITIVE_INFINITY, duration: 1 }}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {player.stats && (\r\n          <div className=\"mt-2 grid grid-cols-2 gap-x-4 gap-y-1 text-xs text-muted-foreground\">\r\n            <div className=\"flex items-center gap-1\">\r\n              <User className=\"h-3 w-3\" />\r\n              <span>Moves: {player.stats.movesMade}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-1\">\r\n              <Clock className=\"h-3 w-3\" />\r\n              <span>Avg: {player.stats.averageMoveTime.toFixed(1)}s</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PlayerCard\r\n\r\n"],"names":[],"mappings":";;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;;;;;AAeA,MAAM,aAAwC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE;IAChF,uBAAuB;IACvB,MAAM,aAAa,CAAC;QAClB,MAAM,UAAU,KAAK,KAAK,CAAC,UAAU;QACrC,MAAM,OAAO,UAAU;QACvB,OAAO,GAAG,QAAQ,CAAC,EAAE,OAAO,KAAK,MAAM,KAAK,MAAM;IACpD;IAEA,gCAAgC;IAChC,MAAM,eAAe,CAAC;QACpB,IAAI,WAAW,IAAI,OAAO;QAC1B,IAAI,WAAW,IAAI,OAAO;QAC1B,IAAI,WAAW,IAAI,OAAO;QAC1B,OAAO;IACT;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAW,CAAC,4CAA4C,EAAE,WAAW,wBAAwB,IAAI;;0BACrG,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,WAAW,CAAC,eAAe,EAAE,WAAW,gBAAgB,aAAa;gBACrE,SAAS;oBAAE,OAAO;gBAAK;gBACvB,SAAS;oBAAE,OAAO,WAAW,SAAS;gBAAK;gBAC3C,YAAY;oBAAE,UAAU;oBAAG,QAAQ,WAAW,OAAO,iBAAiB,GAAG;gBAAE;;;;;;0BAE7E,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;oCACZ,OAAO,MAAM,iBACZ,8OAAC;wCACC,KAAK,OAAO,MAAM,IAAI;wCACtB,KAAK,OAAO,IAAI;wCAChB,WAAU;;;;;6DAGZ,8OAAC;wCACC,WAAW,CAAC,wDAAwD,EAAE,OAAO,KAAK,KAAK,UAAU,aAAa,mCAAmC;kDAEjJ,cAAA,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,KAAK,KAAK,UAAU,eAAe,cAAc;;;;;;;;;;;kDAG1F,8OAAC;;0DACC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAAa,OAAO,IAAI;;;;;;oDACrC,OAAO,IAAI,kBAAI,8OAAC,gMAAA,CAAA,MAAG;wDAAC,WAAU;;;;;;;;;;;;0DAEjC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;;4DAAK;4DAAW,OAAO,KAAK;;;;;;;oDAC5B,OAAO,KAAK,EAAE,yBACb,8OAAC;wDAAK,WAAU;;0EACd,8OAAC,sMAAA,CAAA,SAAM;gEAAC,WAAU;;;;;;4DAAY;4DAAE,OAAO,KAAK,CAAC,QAAQ;;;;;;+DAErD;;;;;;;;;;;;;;;;;;;4BAKT,kBAAkB,sBACjB,8OAAC;gCAAI,WAAW,CAAC,4BAA4B,EAAE,aAAa,gBAAgB;0CACzE,WAAW;;;;;;4BAIf,0BACC,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gCACT,WAAU;gCACV,SAAS;oCAAE,OAAO;wCAAC;wCAAG;wCAAK;qCAAE;gCAAC;gCAC9B,YAAY;oCAAE,QAAQ,OAAO,iBAAiB;oCAAE,UAAU;gCAAE;;;;;;;;;;;;oBAKjE,OAAO,KAAK,kBACX,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,8OAAC;;4CAAK;4CAAQ,OAAO,KAAK,CAAC,SAAS;;;;;;;;;;;;;0CAEtC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,oMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;kDACjB,8OAAC;;4CAAK;4CAAM,OAAO,KAAK,CAAC,eAAe,CAAC,OAAO,CAAC;4CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlE;uCAEe","debugId":null}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n    React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n    React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n    <ScrollAreaPrimitive.Root ref={ref} className={cn(\"relative overflow-hidden\", className)} {...props}>\r\n        <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">{children}</ScrollAreaPrimitive.Viewport>\r\n        <ScrollBar />\r\n        <ScrollAreaPrimitive.Corner />\r\n    </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n    React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n    React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n        ref={ref}\r\n        orientation={orientation}\r\n        className={cn(\r\n            \"flex touch-none select-none transition-colors\",\r\n            orientation === \"vertical\" && \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n            orientation === \"horizontal\" && \"h-2.5 border-t border-t-transparent p-[1px]\",\r\n            className,\r\n        )}\r\n        {...props}\r\n    >\r\n        <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBAClC,8OAAC,0KAAA,CAAA,OAAwB;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QAAa,GAAG,KAAK;;0BAC/F,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BAAmC;;;;;;0BAC3E,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAGnC,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBAClD,8OAAC,0KAAA,CAAA,sBAAuC;QACpC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,iDACA,gBAAgB,cAAc,sDAC9B,gBAAgB,gBAAgB,+CAChC;QAEH,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGvD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/move-history.tsx"],"sourcesContent":["import type React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\n\r\ninterface MoveHistoryProps {\r\n  moves: string[]\r\n}\r\n\r\nconst MoveHistory: React.FC<MoveHistoryProps> = ({ moves }) => {\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"py-3\">\r\n        <CardTitle className=\"text-lg\">Move History</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"p-0\">\r\n        <ScrollArea className=\"h-[200px] px-4\">\r\n          {moves.length === 0 ? (\r\n            <p className=\"text-sm text-muted-foreground py-2\">No moves yet</p>\r\n          ) : (\r\n            <ul className=\"space-y-1\">\r\n              {moves.map((move, index) => (\r\n                <li key={index} className=\"text-sm py-1 border-b border-border last:border-0\">\r\n                  <span className=\"font-mono text-xs mr-2 text-muted-foreground\">{index + 1}.</span>\r\n                  {move}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </ScrollArea>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MoveHistory\r\n\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAMA,MAAM,cAA0C,CAAC,EAAE,KAAK,EAAE;IACxD,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAU;;;;;;;;;;;0BAEjC,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;0BACrB,cAAA,8OAAC,0IAAA,CAAA,aAAU;oBAAC,WAAU;8BACnB,MAAM,MAAM,KAAK,kBAChB,8OAAC;wBAAE,WAAU;kCAAqC;;;;;6CAElD,8OAAC;wBAAG,WAAU;kCACX,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;gCAAe,WAAU;;kDACxB,8OAAC;wCAAK,WAAU;;4CAAgD,QAAQ;4CAAE;;;;;;;oCACzE;;+BAFM;;;;;;;;;;;;;;;;;;;;;;;;;;AAWzB;uCAEe","debugId":null}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\r\n  },\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBAAO,8OAAC;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QAAK,KAAK;QAAM,GAAG,KAAK;;;;;;AAC/F;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(({ className, type, ...props }, ref) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={cn(\r\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className,\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAgC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC3F,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 858, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\")\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EAAE;AAE1B,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAAC,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAAa,GAAG,KAAK;;;;;;AAErF,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return <RadioGroupPrimitive.Root className={cn(\"grid gap-2\", className)} {...props} ref={ref} />\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBAAO,8OAAC,0KAAA,CAAA,OAAwB;QAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAAa,GAAG,KAAK;QAAE,KAAK;;;;;;AAC3F;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1003, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/types/player.ts"],"sourcesContent":["/**\r\n * Represents a player in the Kor-u-Boodo Shax game\r\n */\r\nexport type Player = {\r\n    /**\r\n     * Unique identifier for the player (1 or 2)\r\n     */\r\n    id: number\r\n\r\n    /**\r\n     * Display name of the player\r\n     */\r\n    name: string\r\n\r\n    /**\r\n     * The color of the player's pieces\r\n     */\r\n    color: \"black\" | \"white\" | string\r\n\r\n    /**\r\n     * Number of opponent pieces captured\r\n     */\r\n    score: number\r\n\r\n    /**\r\n     * Optional avatar URL for the player\r\n     */\r\n    avatar?: string\r\n\r\n    /**\r\n     * Whether the player is AI-controlled\r\n     */\r\n    isAI?: boolean\r\n\r\n    /**\r\n     * AI difficulty level if the player is AI-controlled\r\n     */\r\n    aiDifficulty?: \"easy\" | \"medium\" | \"hard\"\r\n\r\n    /**\r\n     * Time remaining for the player in timed games (in seconds)\r\n     */\r\n    timeRemaining?: number\r\n\r\n    /**\r\n     * Statistics for the current game session\r\n     */\r\n    stats?: {\r\n        /**\r\n         * Number of moves made\r\n         */\r\n        movesMade: number\r\n\r\n        /**\r\n         * Number of captures made\r\n         */\r\n        capturesMade: number\r\n\r\n        /**\r\n         * Average time per move (in seconds)\r\n         */\r\n        averageMoveTime: number\r\n\r\n        /**\r\n         * Number of games won in the current session\r\n         */\r\n        gamesWon: number\r\n    }\r\n}\r\n\r\n/**\r\n * Default player configurations\r\n */\r\nexport const DEFAULT_PLAYERS: [Player, Player] = [\r\n    {\r\n        id: 1,\r\n        name: \"Player 1\",\r\n        color: \"black\",\r\n        score: 0,\r\n        stats: {\r\n            movesMade: 0,\r\n            capturesMade: 0,\r\n            averageMoveTime: 0,\r\n            gamesWon: 0,\r\n        },\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Player 2\",\r\n        color: \"white\",\r\n        score: 0,\r\n        stats: {\r\n            movesMade: 0,\r\n            capturesMade: 0,\r\n            averageMoveTime: 0,\r\n            gamesWon: 0,\r\n        },\r\n    },\r\n]\r\n\r\n/**\r\n * Updates a player's statistics after a move\r\n */\r\nexport function updatePlayerStats(player: Player, moveTime: number, didCapture = false): Player {\r\n    const stats = player.stats || {\r\n        movesMade: 0,\r\n        capturesMade: 0,\r\n        averageMoveTime: 0,\r\n        gamesWon: 0,\r\n    }\r\n\r\n    const newMovesMade = stats.movesMade + 1\r\n    const newCapturesMade = didCapture ? stats.capturesMade + 1 : stats.capturesMade\r\n\r\n    // Calculate new average move time\r\n    const totalPreviousTime = stats.averageMoveTime * stats.movesMade\r\n    const newAverageMoveTime = (totalPreviousTime + moveTime) / newMovesMade\r\n\r\n    return {\r\n        ...player,\r\n        score: didCapture ? player.score + 1 : player.score,\r\n        stats: {\r\n            ...stats,\r\n            movesMade: newMovesMade,\r\n            capturesMade: newCapturesMade,\r\n            averageMoveTime: newAverageMoveTime,\r\n        },\r\n    }\r\n}\r\n\r\n/**\r\n * Updates a player's statistics after winning a game\r\n */\r\nexport function updatePlayerAfterWin(player: Player): Player {\r\n    const stats = player.stats || {\r\n        movesMade: 0,\r\n        capturesMade: 0,\r\n        averageMoveTime: 0,\r\n        gamesWon: 0,\r\n    }\r\n\r\n    return {\r\n        ...player,\r\n        stats: {\r\n            ...stats,\r\n            gamesWon: stats.gamesWon + 1,\r\n        },\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;AAuEM,MAAM,kBAAoC;IAC7C;QACI,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;YACH,WAAW;YACX,cAAc;YACd,iBAAiB;YACjB,UAAU;QACd;IACJ;IACA;QACI,IAAI;QACJ,MAAM;QACN,OAAO;QACP,OAAO;QACP,OAAO;YACH,WAAW;YACX,cAAc;YACd,iBAAiB;YACjB,UAAU;QACd;IACJ;CACH;AAKM,SAAS,kBAAkB,MAAc,EAAE,QAAgB,EAAE,aAAa,KAAK;IAClF,MAAM,QAAQ,OAAO,KAAK,IAAI;QAC1B,WAAW;QACX,cAAc;QACd,iBAAiB;QACjB,UAAU;IACd;IAEA,MAAM,eAAe,MAAM,SAAS,GAAG;IACvC,MAAM,kBAAkB,aAAa,MAAM,YAAY,GAAG,IAAI,MAAM,YAAY;IAEhF,kCAAkC;IAClC,MAAM,oBAAoB,MAAM,eAAe,GAAG,MAAM,SAAS;IACjE,MAAM,qBAAqB,CAAC,oBAAoB,QAAQ,IAAI;IAE5D,OAAO;QACH,GAAG,MAAM;QACT,OAAO,aAAa,OAAO,KAAK,GAAG,IAAI,OAAO,KAAK;QACnD,OAAO;YACH,GAAG,KAAK;YACR,WAAW;YACX,cAAc;YACd,iBAAiB;QACrB;IACJ;AACJ;AAKO,SAAS,qBAAqB,MAAc;IAC/C,MAAM,QAAQ,OAAO,KAAK,IAAI;QAC1B,WAAW;QACX,cAAc;QACd,iBAAiB;QACjB,UAAU;IACd;IAEA,OAAO;QACH,GAAG,MAAM;QACT,OAAO;YACH,GAAG,KAAK;YACR,UAAU,MAAM,QAAQ,GAAG;QAC/B;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 1080, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/game-settings.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { type Player, DEFAULT_PLAYERS } from \"@/types/player\"\r\nimport type { GameMode } from \"@/types/types\"\r\nimport { motion } from \"framer-motion\"\r\nimport { User, Bot, Clock, Globe } from \"lucide-react\"\r\n\r\ninterface GameSettingsProps {\r\n    players: Player[]\r\n    firstPlayer: number\r\n    onSubmit: (\r\n        player1: Player,\r\n        player2: Player,\r\n        firstPlayer: number,\r\n        gameMode: GameMode,\r\n        timeLimit: number\r\n    ) => void\r\n    gameMode: GameMode\r\n    timeLimit: number\r\n}\r\n\r\nconst GameSettings: React.FC<GameSettingsProps> = ({\r\n    players,\r\n    firstPlayer,\r\n    onSubmit,\r\n    gameMode: initialGameMode,\r\n    timeLimit: initialTimeLimit,\r\n}) => {\r\n    const [player1, setPlayer1] = useState<Player>({\r\n        ...DEFAULT_PLAYERS[0],\r\n        ...players[0],\r\n    })\r\n    const [player2, setPlayer2] = useState<Player>({\r\n        ...DEFAULT_PLAYERS[1],\r\n        ...players[1],\r\n    })\r\n    const [selectedFirstPlayer, setSelectedFirstPlayer] = useState(firstPlayer.toString())\r\n    const [gameMode, setGameMode] = useState<GameMode>(initialGameMode)\r\n    const [timeLimit, setTimeLimit] = useState(initialTimeLimit)\r\n    const [aiDifficulty, setAiDifficulty] = useState<\"easy\" | \"medium\" | \"hard\">(\"medium\")\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n\r\n        // Update player 2 for AI mode\r\n        const updatedPlayer2 =\r\n            gameMode === \"ai\"\r\n                ? { ...player2, name: `AI (${aiDifficulty})`, isAI: true, aiDifficulty }\r\n                : { ...player2, isAI: false }\r\n\r\n        onSubmit(player1, updatedPlayer2, Number.parseInt(selectedFirstPlayer), gameMode, timeLimit)\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"w-full max-w-md\"\r\n        >\r\n            <Card className=\"shadow-lg\">\r\n                <CardHeader>\r\n                    <CardTitle className=\"text-2xl text-center\">Game Settings</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                        <Tabs defaultValue={gameMode} onValueChange={(value) => setGameMode(value as GameMode)}>\r\n                            <TabsList className=\"grid w-full grid-cols-4\">\r\n                                <TabsTrigger value=\"standard\" className=\"flex items-center gap-1\">\r\n                                    <User className=\"h-4 w-4\" />\r\n                                    <span className=\"hidden sm:inline\">Standard</span>\r\n                                </TabsTrigger>\r\n                                <TabsTrigger value=\"timed\" className=\"flex items-center gap-1\">\r\n                                    <Clock className=\"h-4 w-4\" />\r\n                                    <span className=\"hidden sm:inline\">Timed</span>\r\n                                </TabsTrigger>\r\n                                <TabsTrigger value=\"ai\" className=\"flex items-center gap-1\">\r\n                                    <Bot className=\"h-4 w-4\" />\r\n                                    <span className=\"hidden sm:inline\">AI</span>\r\n                                </TabsTrigger>\r\n                                <TabsTrigger value=\"online\" className=\"flex items-center gap-1\" disabled>\r\n                                    <Globe className=\"h-4 w-4\" />\r\n                                    <span className=\"hidden sm:inline\">Online</span>\r\n                                </TabsTrigger>\r\n                            </TabsList>\r\n\r\n                            {/* Standard Mode */}\r\n                            <TabsContent value=\"standard\" className=\"pt-4\">\r\n                                <p className=\"text-sm text-muted-foreground mb-4\">\r\n                                    Play without time limits. The game continues until a player wins.\r\n                                </p>\r\n\r\n                                <div className=\"space-y-4\">\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"player1\">Player 1 (Black)</Label>\r\n                                        <Input\r\n                                            id=\"player1\"\r\n                                            value={player1.name}\r\n                                            onChange={(e) => setPlayer1({ ...player1, name: e.target.value })}\r\n                                            placeholder=\"Enter player name\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"player2\">Player 2 (White)</Label>\r\n                                        <Input\r\n                                            id=\"player2\"\r\n                                            value={player2.name}\r\n                                            onChange={(e) => setPlayer2({ ...player2, name: e.target.value })}\r\n                                            placeholder=\"Enter player name\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </TabsContent>\r\n\r\n                            {/* Timed Mode */}\r\n                            <TabsContent value=\"timed\" className=\"pt-4 space-y-4\">\r\n                                <p className=\"text-sm text-muted-foreground\">\r\n                                    Each player has a limited amount of time to make all their moves.\r\n                                </p>\r\n\r\n                                <div className=\"space-y-4\">\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"player1Timed\">Player 1 (Black)</Label>\r\n                                        <Input\r\n                                            id=\"player1Timed\"\r\n                                            value={player1.name}\r\n                                            onChange={(e) => setPlayer1({ ...player1, name: e.target.value })}\r\n                                            placeholder=\"Enter player name\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"player2Timed\">Player 2 (White)</Label>\r\n                                        <Input\r\n                                            id=\"player2Timed\"\r\n                                            value={player2.name}\r\n                                            onChange={(e) => setPlayer2({ ...player2, name: e.target.value })}\r\n                                            placeholder=\"Enter player name\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"timeLimit\">Time Limit (seconds)</Label>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            <Input\r\n                                                id=\"timeLimit\"\r\n                                                type=\"number\"\r\n                                                min={60}\r\n                                                max={3600}\r\n                                                value={timeLimit}\r\n                                                onChange={(e) => setTimeLimit(Number.parseInt(e.target.value))}\r\n                                            />\r\n                                            <span className=\"text-sm text-muted-foreground\">\r\n                                                {Math.floor(timeLimit / 60)}:{timeLimit % 60 < 10 ? `0${timeLimit % 60}` : timeLimit % 60}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </TabsContent>\r\n\r\n                            {/* AI Mode */}\r\n                            <TabsContent value=\"ai\" className=\"pt-4 space-y-4\">\r\n                                <p className=\"text-sm text-muted-foreground\">Play against the computer with adjustable difficulty.</p>\r\n\r\n                                <div className=\"space-y-4\">\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label htmlFor=\"playerAI\">Your Name (Black)</Label>\r\n                                        <Input\r\n                                            id=\"playerAI\"\r\n                                            value={player1.name}\r\n                                            onChange={(e) => setPlayer1({ ...player1, name: e.target.value })}\r\n                                            placeholder=\"Enter your name\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"space-y-2\">\r\n                                        <Label>AI Difficulty</Label>\r\n                                        <RadioGroup\r\n                                            value={aiDifficulty}\r\n                                            onValueChange={(value) => setAiDifficulty(value as \"easy\" | \"medium\" | \"hard\")}\r\n                                            className=\"flex space-x-4\"\r\n                                        >\r\n                                            <div className=\"flex items-center space-x-2\">\r\n                                                <RadioGroupItem value=\"easy\" id=\"ai-easy\" />\r\n                                                <Label htmlFor=\"ai-easy\">Easy</Label>\r\n                                            </div>\r\n                                            <div className=\"flex items-center space-x-2\">\r\n                                                <RadioGroupItem value=\"medium\" id=\"ai-medium\" />\r\n                                                <Label htmlFor=\"ai-medium\">Medium</Label>\r\n                                            </div>\r\n                                            <div className=\"flex items-center space-x-2\">\r\n                                                <RadioGroupItem value=\"hard\" id=\"ai-hard\" />\r\n                                                <Label htmlFor=\"ai-hard\">Hard</Label>\r\n                                            </div>\r\n                                        </RadioGroup>\r\n                                    </div>\r\n                                </div>\r\n                            </TabsContent>\r\n\r\n                            {/* Online Mode */}\r\n                            <TabsContent value=\"online\" className=\"pt-4 space-y-4\">\r\n                                <p className=\"text-sm text-muted-foreground\">Play against other players online. (Coming soon)</p>\r\n                            </TabsContent>\r\n                        </Tabs>\r\n\r\n                        <div className=\"space-y-2\">\r\n                            <Label>First Player</Label>\r\n                            <RadioGroup value={selectedFirstPlayer} onValueChange={setSelectedFirstPlayer} className=\"flex space-x-4\">\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <RadioGroupItem value=\"1\" id=\"player1-first\" />\r\n                                    <Label htmlFor=\"player1-first\">Player 1</Label>\r\n                                </div>\r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <RadioGroupItem value=\"2\" id=\"player2-first\" />\r\n                                    <Label htmlFor=\"player2-first\">Player 2</Label>\r\n                                </div>\r\n                            </RadioGroup>\r\n                        </div>\r\n\r\n                        <Button type=\"submit\" className=\"w-full\">\r\n                            Start Game\r\n                        </Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default GameSettings\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1811, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/game-controls.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { RefreshCw, Settings } from \"lucide-react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\"\r\nimport { Button } from \"./ui/button\"\r\n\r\ninterface GameControlsProps {\r\n  onRestart: () => void\r\n  onSettings: () => void\r\n  timer: number\r\n  gameMode: \"standard\" | \"timed\"\r\n}\r\n\r\nconst GameControls: React.FC<GameControlsProps> = ({ onRestart, onSettings, timer, gameMode }) => {\r\n  // Format time as MM:SS\r\n  const formatTime = (seconds: number): string => {\r\n    const minutes = Math.floor(seconds / 60)\r\n    const secs = seconds % 60\r\n    return `${minutes}:${secs < 10 ? \"0\" : \"\"}${secs}`\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"py-3\">\r\n        <CardTitle className=\"text-lg\">Game Controls</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {gameMode === \"standard\" && (\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-muted-foreground\">Game Time</p>\r\n            <p className=\"text-2xl font-mono\">{formatTime(timer)}</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" className=\"flex-1\" onClick={onRestart}>\r\n            <RefreshCw className=\"mr-2 h-4 w-4\" />\r\n            Restart\r\n          </Button>\r\n          <Button variant=\"outline\" className=\"flex-1\" onClick={onSettings}>\r\n            <Settings className=\"mr-2 h-4 w-4\" />\r\n            Settings\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default GameControls"],"names":[],"mappings":";;;;AAIA;AAAA;AACA;AACA;AANA;;;;;AAeA,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE;IAC3F,uBAAuB;IACvB,MAAM,aAAa,CAAC;QAClB,MAAM,UAAU,KAAK,KAAK,CAAC,UAAU;QACrC,MAAM,OAAO,UAAU;QACvB,OAAO,GAAG,QAAQ,CAAC,EAAE,OAAO,KAAK,MAAM,KAAK,MAAM;IACpD;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAU;;;;;;;;;;;0BAEjC,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;oBACpB,aAAa,4BACZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;0CAC7C,8OAAC;gCAAE,WAAU;0CAAsB,WAAW;;;;;;;;;;;;kCAIlD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,WAAU;gCAAS,SAAS;;kDACpD,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGxC,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,WAAU;gCAAS,SAAS;;kDACpD,8OAAC,0MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;AAOjD;uCAEe","debugId":null}},
    {"offset": {"line": 1943, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/game-over-modal.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Trophy } from \"lucide-react\"\r\nimport { Player } from \"@/types/player\"\r\n\r\ninterface GameOverModalProps {\r\n  winner: Player\r\n  onRestart: () => void\r\n  onSettings: () => void\r\n}\r\n\r\nconst GameOverModal: React.FC<GameOverModalProps> = ({ winner, onRestart, onSettings }) => {\r\n  return (\r\n    <motion.div\r\n      className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <motion.div\r\n        className=\"bg-card rounded-lg shadow-xl max-w-md w-full p-6\"\r\n        initial={{ scale: 0.9, y: 20 }}\r\n        animate={{ scale: 1, y: 0 }}\r\n        transition={{ type: \"spring\", damping: 15 }}\r\n      >\r\n        <div className=\"text-center bg-blend-hue\">\r\n          <motion.div\r\n            initial={{ rotate: -10, scale: 0.8 }}\r\n            animate={{ rotate: 0, scale: 1 }}\r\n            transition={{ duration: 0.5, delay: 0.2 }}\r\n            className=\"mx-auto w-20 h-20 bg-yellow-500/20 rounded-full flex items-center justify-center mb-4\"\r\n          >\r\n            <Trophy className=\"h-10 w-10 text-yellow-500\" />\r\n          </motion.div>\r\n\r\n          <motion.h2\r\n            className=\"text-2xl font-bold mb-2\"\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.3 }}\r\n          >\r\n            Game Over!\r\n          </motion.h2>\r\n\r\n          <motion.div\r\n            className=\"mb-6\"\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.4 }}\r\n          >\r\n            <p className=\"text-lg\">\r\n              <span className=\"font-bold\">{winner.name}</span> wins the game!\r\n            </p>\r\n            <p className=\"text-sm text-muted-foreground mt-1\">Congratulations on your victory!</p>\r\n          </motion.div>\r\n\r\n          <div className=\"flex flex-col sm:flex-row gap-3\">\r\n            <Button onClick={onRestart} className=\"flex-1\">\r\n              Play Again\r\n            </Button>\r\n            <Button onClick={onSettings} variant=\"outline\" className=\"flex-1\">\r\n              Change Settings\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default GameOverModal"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AANA;;;;;AAeA,MAAM,gBAA8C,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE;IACpF,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,WAAU;QACV,SAAS;YAAE,SAAS;QAAE;QACtB,SAAS;YAAE,SAAS;QAAE;QACtB,MAAM;YAAE,SAAS;QAAE;kBAEnB,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;YACT,WAAU;YACV,SAAS;gBAAE,OAAO;gBAAK,GAAG;YAAG;YAC7B,SAAS;gBAAE,OAAO;gBAAG,GAAG;YAAE;YAC1B,YAAY;gBAAE,MAAM;gBAAU,SAAS;YAAG;sBAE1C,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,QAAQ,CAAC;4BAAI,OAAO;wBAAI;wBACnC,SAAS;4BAAE,QAAQ;4BAAG,OAAO;wBAAE;wBAC/B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;wBACxC,WAAU;kCAEV,cAAA,8OAAC,sMAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;;;;;;kCAGpB,8OAAC,0LAAA,CAAA,SAAM,CAAC,EAAE;wBACR,WAAU;wBACV,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,OAAO;wBAAI;kCAC1B;;;;;;kCAID,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,WAAU;wBACV,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,OAAO;wBAAI;;0CAEzB,8OAAC;gCAAE,WAAU;;kDACX,8OAAC;wCAAK,WAAU;kDAAa,OAAO,IAAI;;;;;;oCAAQ;;;;;;;0CAElD,8OAAC;gCAAE,WAAU;0CAAqC;;;;;;;;;;;;kCAGpD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAW,WAAU;0CAAS;;;;;;0CAG/C,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAY,SAAQ;gCAAU,WAAU;0CAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ9E;uCAEe","debugId":null}},
    {"offset": {"line": 2127, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\n// Inspired by react-hot-toast library\r\nimport { useState, useEffect } from \"react\"\r\n\r\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 5\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction generateId() {\r\n  count = (count + 1) % Number.MAX_VALUE\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: string\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: string\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t,\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = generateId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = useState<State>(memoryState)\r\n\r\n  useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2283, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/components/Game.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport type { Board, Position } from \"@/types/types\"\r\nimport BoardComponent from \"@/components/Board\"\r\nimport PlayerCard from \"@/components/player-card\"\r\nimport MoveHistory from \"@/components/move-history\"\r\nimport GameSettings from \"@/components/game-settings\"\r\nimport GameControls from \"@/components/game-controls\"\r\nimport GameOverModal from \"@/components/game-over-modal\"\r\nimport { useToast } from \"@/hooks/use-toast\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Player } from \"@/types/player\"\r\n\r\n// Initial board setup\r\nconst initialBoard: Board = [\r\n  [1, 1, 1, 1, 1],\r\n  [1, 1, 1, 1, 1],\r\n  [1, 1, 0, 2, 2],\r\n  [2, 2, 2, 2, 2],\r\n  [2, 2, 2, 2, 2],\r\n]\r\n\r\n\r\ntype GameMode = \"standard\" | \"timed\"\r\n\r\nconst Game = () => {\r\n  const [board, setBoard] = useState<Board>(initialBoard)\r\n  const [currentPlayer, setCurrentPlayer] = useState<number>(1)\r\n  const [selectedPiece, setSelectedPiece] = useState<Position | null>(null)\r\n  const [winner, setWinner] = useState<number | null>(null)\r\n  const [scores, setScores] = useState<{ [key: number]: number }>({ 1: 0, 2: 0 })\r\n  const [moveHistory, setMoveHistory] = useState<string[]>([])\r\n  const [timer, setTimer] = useState<number>(0)\r\n  const [isTimerRunning, setIsTimerRunning] = useState<boolean>(false)\r\n  const [showSettings, setShowSettings] = useState<boolean>(true)\r\n  const [players, setPlayers] = useState<Player[]>([\r\n    { id: 1, name: \"Player 1\", color: \"black\", score: 0 },\r\n    { id: 2, name: \"Player 2\", color: \"white\", score: 0 },\r\n  ])\r\n  const [firstPlayer, setFirstPlayer] = useState<number>(1)\r\n  const [validMoves, setValidMoves] = useState<Position[]>([])\r\n  const [capturablePositions, setCapturablePositions] = useState<Position[]>([])\r\n  const [showGameOver, setShowGameOver] = useState<boolean>(false)\r\n  const [canContinueCapturing, setCanContinueCapturing] = useState<boolean>(false)\r\n  const [lastMove, setLastMove] = useState<Position[]>([])\r\n  const [gameMode, setGameMode] = useState<GameMode>(\"standard\")\r\n  const [timeLimit, setTimeLimit] = useState<number>(300) // 5 minutes in seconds\r\n  const [playerTime, setPlayerTime] = useState<{ [key: number]: number }>({ 1: 300, 2: 300 })\r\n\r\n  const { toast } = useToast()\r\n\r\n  // Sound effects\r\n  const playSound = (sound: string) => {\r\n    const audio = new Audio(`/sounds/${sound}.mp3`)\r\n    audio.volume = 0.5\r\n    audio.play().catch((e) => console.error(\"Error playing sound:\", e))\r\n  }\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout\r\n    if (isTimerRunning) {\r\n      interval = setInterval(() => {\r\n        if (gameMode === \"timed\") {\r\n          setPlayerTime((prev) => {\r\n            const newTime = { ...prev }\r\n            newTime[currentPlayer] = Math.max(0, newTime[currentPlayer] - 1)\r\n\r\n            // Check for time out\r\n            if (newTime[currentPlayer] === 0) {\r\n              setWinner(currentPlayer === 1 ? 2 : 1)\r\n              setShowGameOver(true)\r\n              setIsTimerRunning(false)\r\n              playSound(\"win\")\r\n              clearInterval(interval)\r\n            }\r\n\r\n            return newTime\r\n          })\r\n        } else {\r\n          setTimer((prev) => prev + 1)\r\n        }\r\n      }, 1000)\r\n    }\r\n    return () => clearInterval(interval)\r\n  }, [isTimerRunning, currentPlayer, gameMode])\r\n\r\n  // Calculate remaining pieces\r\n  const player1Pieces = board.flat().filter((cell) => cell === 1).length\r\n  const player2Pieces = board.flat().filter((cell) => cell === 2).length\r\n\r\n  // Check for valid moves\r\n  useEffect(() => {\r\n    const { validMoves, capturablePositions } = getValidMoves(board, currentPlayer)\r\n    setValidMoves(validMoves)\r\n    setCapturablePositions(capturablePositions)\r\n\r\n    // Check for game over conditions\r\n    if (!winner && !showSettings && !validMoves.length && !capturablePositions.length) {\r\n      setWinner(currentPlayer === 1 ? 2 : 1)\r\n      setShowGameOver(true)\r\n      setIsTimerRunning(false)\r\n      playSound(\"win\")\r\n    }\r\n  }, [board, currentPlayer, winner, showSettings])\r\n\r\n  // Check if a move is valid\r\n  const isValidMove = (\r\n    board: Board,\r\n    fromRow: number,\r\n    fromCol: number,\r\n    toRow: number,\r\n    toCol: number,\r\n    player: number,\r\n  ): boolean => {\r\n    if (board[toRow][toCol] !== 0) return false\r\n\r\n    const rowDiff = Math.abs(toRow - fromRow)\r\n    const colDiff = Math.abs(toCol - fromCol)\r\n\r\n    // Regular move (one space)\r\n    if ((rowDiff === 1 && colDiff === 0) || (rowDiff === 0 && colDiff === 1)) {\r\n      return !canContinueCapturing // Only allow regular moves if not in a capturing sequence\r\n    }\r\n\r\n    // Capture move (two spaces with opponent in between)\r\n    if ((rowDiff === 2 && colDiff === 0) || (rowDiff === 0 && colDiff === 2)) {\r\n      const midRow = (fromRow + toRow) / 2\r\n      const midCol = (fromCol + toCol) / 2\r\n      const midPiece = board[midRow][midCol]\r\n\r\n      return midPiece !== 0 && midPiece !== player\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  // Check if player has valid moves\r\n  const hasValidMoves = (board: Board, player: number): boolean => {\r\n    for (let row = 0; row < board.length; row++) {\r\n      for (let col = 0; col < board[row].length; col++) {\r\n        if (board[row][col] === player) {\r\n          const directions = [\r\n            [1, 0],\r\n            [-1, 0],\r\n            [0, 1],\r\n            [0, -1], // Down, Up, Right, Left\r\n          ]\r\n\r\n          for (const [dx, dy] of directions) {\r\n            // Check regular move\r\n            const newRow = row + dx\r\n            const newCol = col + dy\r\n\r\n            if (\r\n              newRow >= 0 &&\r\n              newRow < board.length &&\r\n              newCol >= 0 &&\r\n              newCol < board[row].length &&\r\n              board[newRow][newCol] === 0\r\n            ) {\r\n              return true\r\n            }\r\n\r\n            // Check capture move\r\n            const jumpRow = row + 2 * dx\r\n            const jumpCol = col + 2 * dy\r\n\r\n            if (\r\n              jumpRow >= 0 &&\r\n              jumpRow < board.length &&\r\n              jumpCol >= 0 &&\r\n              jumpCol < board[row].length &&\r\n              board[jumpRow][jumpCol] === 0\r\n            ) {\r\n              const midRow = row + dx\r\n              const midCol = col + dy\r\n\r\n              if (\r\n                midRow >= 0 &&\r\n                midRow < board.length &&\r\n                midCol >= 0 &&\r\n                midCol < board[row].length &&\r\n                board[midRow][midCol] !== 0 &&\r\n                board[midRow][midCol] !== player\r\n              ) {\r\n                return true\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  // Check if a piece can make a jump move\r\n  const hasValidJumpMoves = (board: Board, row: number, col: number, player: number): boolean => {\r\n    const directions = [\r\n      [1, 0],\r\n      [-1, 0],\r\n      [0, 1],\r\n      [0, -1], // Down, Up, Right, Left\r\n    ]\r\n\r\n    for (const [dx, dy] of directions) {\r\n      const jumpRow = row + 2 * dx\r\n      const jumpCol = col + 2 * dy\r\n\r\n      if (\r\n        jumpRow >= 0 &&\r\n        jumpRow < board.length &&\r\n        jumpCol >= 0 &&\r\n        jumpCol < board[0].length &&\r\n        board[jumpRow][jumpCol] === 0\r\n      ) {\r\n        const midRow = row + dx\r\n        const midCol = col + dy\r\n\r\n        if (board[midRow][midCol] !== 0 && board[midRow][midCol] !== player) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  // Get all valid moves for current player\r\n  const getValidMoves = (board: Board, player: number): { validMoves: Position[]; capturablePositions: Position[] } => {\r\n    const validMoves: Position[] = []\r\n    const capturablePositions: Position[] = []\r\n\r\n    // If we're in a capturing sequence, only the selected piece can move\r\n    if (canContinueCapturing && selectedPiece) {\r\n      if (hasValidJumpMoves(board, selectedPiece[0], selectedPiece[1], player)) {\r\n        capturablePositions.push(selectedPiece)\r\n      }\r\n      return { validMoves, capturablePositions }\r\n    }\r\n\r\n    // Check all pieces\r\n    board.forEach((row, rowIndex) => {\r\n      row.forEach((cell, colIndex) => {\r\n        if (cell === player) {\r\n          const directions = [\r\n            [1, 0],\r\n            [-1, 0],\r\n            [0, 1],\r\n            [0, -1], // Down, Up, Right, Left\r\n          ]\r\n\r\n          // First check for captures (prioritize these)\r\n          let hasCapture = false\r\n\r\n          for (const [dx, dy] of directions) {\r\n            const jumpRow = rowIndex + 2 * dx\r\n            const jumpCol = colIndex + 2 * dy\r\n\r\n            if (\r\n              jumpRow >= 0 &&\r\n              jumpRow < board.length &&\r\n              jumpCol >= 0 &&\r\n              jumpCol < row.length &&\r\n              board[jumpRow][jumpCol] === 0\r\n            ) {\r\n              const midRow = rowIndex + dx\r\n              const midCol = colIndex + dy\r\n\r\n              if (board[midRow][midCol] !== 0 && board[midRow][midCol] !== player) {\r\n                capturablePositions.push([rowIndex, colIndex])\r\n                hasCapture = true\r\n              }\r\n            }\r\n          }\r\n\r\n          // If no captures are available, check for regular moves\r\n          if (!hasCapture && capturablePositions.length === 0) {\r\n            for (const [dx, dy] of directions) {\r\n              const newRow = rowIndex + dx\r\n              const newCol = colIndex + dy\r\n\r\n              if (\r\n                newRow >= 0 &&\r\n                newRow < board.length &&\r\n                newCol >= 0 &&\r\n                newCol < row.length &&\r\n                board[newRow][newCol] === 0\r\n              ) {\r\n                validMoves.push([rowIndex, colIndex])\r\n                break // Once we know this piece can move, we don't need to check other directions\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    return { validMoves, capturablePositions }\r\n  }\r\n\r\n  // Handle cell click\r\n  const handleCellClick = (row: number, col: number) => {\r\n    if (winner || showSettings) return\r\n\r\n    const newBoard = board.map((row) => [...row])\r\n\r\n    // If a piece is already selected\r\n    if (selectedPiece) {\r\n      const [fromRow, fromCol] = selectedPiece\r\n\r\n      // Check if the move is valid\r\n      if (isValidMove(newBoard, fromRow, fromCol, row, col, currentPlayer)) {\r\n        // Move the piece\r\n        newBoard[row][col] = currentPlayer\r\n        newBoard[fromRow][fromCol] = 0\r\n\r\n        // Check if it's a capture move\r\n        const rowDiff = Math.abs(row - fromRow)\r\n        const colDiff = Math.abs(col - fromCol)\r\n        let captured = false\r\n\r\n        if ((rowDiff === 2 && colDiff === 0) || (rowDiff === 0 && colDiff === 2)) {\r\n          const midRow = (fromRow + row) / 2\r\n          const midCol = (fromCol + col) / 2\r\n          const capturedPiece = newBoard[midRow][midCol]\r\n          newBoard[midRow][midCol] = 0\r\n          captured = true\r\n\r\n          // Update score\r\n          setScores((prev) => ({\r\n            ...prev,\r\n            [currentPlayer]: prev[currentPlayer] + 1,\r\n          }))\r\n\r\n          // Update player score\r\n          setPlayers((prev) =>\r\n            prev.map((player) => (player.id === currentPlayer ? { ...player, score: player.score + 1 } : player)),\r\n          )\r\n\r\n          playSound(\"capture\")\r\n\r\n          toast({\r\n            title: \"Piece captured!\",\r\n            description: `${players[currentPlayer - 1].name} captured a piece.`,\r\n          })\r\n        } else {\r\n          playSound(\"move\")\r\n        }\r\n\r\n        // Update the board\r\n        setBoard(newBoard)\r\n        setLastMove([\r\n          [fromRow, fromCol],\r\n          [row, col],\r\n        ])\r\n\r\n        // Add to move history\r\n        setMoveHistory((prev) => [\r\n          ...prev,\r\n          `${players[currentPlayer - 1].name} moved from (${fromRow + 1}, ${fromCol + 1}) to (${row + 1}, ${col + 1})${captured ? \" and captured a piece\" : \"\"}`,\r\n        ])\r\n\r\n        // Check for winner\r\n        if (player1Pieces === 0 || player2Pieces === 0) {\r\n          const gameWinner = player1Pieces === 0 ? 2 : 1\r\n          setWinner(gameWinner)\r\n          setShowGameOver(true)\r\n          setIsTimerRunning(false)\r\n          playSound(\"win\")\r\n        } else {\r\n          // Check if another capture is possible\r\n          if (captured && hasValidJumpMoves(newBoard, row, col, currentPlayer)) {\r\n            setSelectedPiece([row, col]) // Keep the same piece selected\r\n            setCanContinueCapturing(true)\r\n            toast({\r\n              title: \"Multiple capture!\",\r\n              description: \"You can capture another piece with the same piece.\",\r\n            })\r\n          } else {\r\n            // End turn\r\n            setSelectedPiece(null)\r\n            setCanContinueCapturing(false)\r\n\r\n            // Switch to next player\r\n            const nextPlayer = currentPlayer === 1 ? 2 : 1\r\n\r\n            // Check if next player has valid moves\r\n            if (!hasValidMoves(newBoard, nextPlayer)) {\r\n              setWinner(currentPlayer)\r\n              setShowGameOver(true)\r\n              setIsTimerRunning(false)\r\n              playSound(\"win\")\r\n            } else {\r\n              setCurrentPlayer(nextPlayer)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // Invalid move, deselect the piece\r\n        if (newBoard[row][col] === currentPlayer) {\r\n          // Select a different piece of the same player\r\n          setSelectedPiece([row, col])\r\n        } else {\r\n          // Deselect if clicking elsewhere\r\n          setSelectedPiece(null)\r\n          setCanContinueCapturing(false)\r\n        }\r\n      }\r\n    } else {\r\n      // No piece selected yet, select one if it belongs to current player\r\n      if (newBoard[row][col] === currentPlayer) {\r\n        setSelectedPiece([row, col])\r\n        setIsTimerRunning(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Restart the game\r\n  const restartGame = () => {\r\n    setBoard(initialBoard)\r\n    setCurrentPlayer(firstPlayer)\r\n    setSelectedPiece(null)\r\n    setWinner(null)\r\n    setScores({ 1: 0, 2: 0 })\r\n    setMoveHistory([])\r\n    setTimer(0)\r\n    setIsTimerRunning(false)\r\n    setShowGameOver(false)\r\n    setCanContinueCapturing(false)\r\n    setLastMove([])\r\n    setPlayerTime({ 1: timeLimit, 2: timeLimit })\r\n\r\n    // Reset player scores\r\n    setPlayers(players.map((player) => ({ ...player, score: 0 })))\r\n  }\r\n\r\n  // Handle settings submission\r\n  const handleSettingsSubmit = (\r\n    player1: Player,\r\n    player2: Player,\r\n    startingPlayer: number,\r\n    mode: GameMode,\r\n    time: number,\r\n  ) => {\r\n    setPlayers([player1, player2])\r\n    setFirstPlayer(startingPlayer)\r\n    setCurrentPlayer(startingPlayer)\r\n    setGameMode(mode)\r\n    setTimeLimit(time)\r\n    setPlayerTime({ 1: time, 2: time })\r\n    setShowSettings(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 flex flex-col items-center bg-white\">\r\n      <motion.h1\r\n        className=\"text-4xl font-bold mb-6 text-center bg-gradient-to-r from-primary to-primary-foreground bg-clip-text text-transparent\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        Kor-u-Boodo Shax\r\n      </motion.h1>\r\n\r\n      {showSettings ? (\r\n        <GameSettings\r\n          players={players}\r\n          firstPlayer={firstPlayer}\r\n          onSubmit={() => handleSettingsSubmit}\r\n          gameMode={gameMode}\r\n          timeLimit={timeLimit}\r\n        />\r\n      ) : (\r\n        <motion.div\r\n          className=\"w-full max-w-6xl\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n            {/* Left sidebar */}\r\n            <div className=\"lg:col-span-1 space-y-4\">\r\n              <PlayerCard\r\n                player={players[0]}\r\n                isActive={currentPlayer === 1}\r\n                remainingTime={gameMode === \"timed\" ? playerTime[1] : null}\r\n              />\r\n\r\n              <MoveHistory moves={moveHistory} />\r\n\r\n              <GameControls\r\n                onRestart={restartGame}\r\n                onSettings={() => setShowSettings(true)}\r\n                timer={timer}\r\n                gameMode={gameMode}\r\n              />\r\n            </div>\r\n\r\n            {/* Game board */}\r\n            <div className=\"lg:col-span-1\">\r\n              <BoardComponent\r\n                board={board}\r\n                validMoves={validMoves}\r\n                capturablePositions={capturablePositions}\r\n                onCellClick={handleCellClick}\r\n                currentPlayer={currentPlayer}\r\n                selectedPiece={selectedPiece}\r\n                lastMove={lastMove}\r\n              />\r\n            </div>\r\n\r\n            {/* Right sidebar */}\r\n            <div className=\"lg:col-span-1 space-y-4\">\r\n              <PlayerCard\r\n                player={players[1]}\r\n                isActive={currentPlayer === 2}\r\n                remainingTime={gameMode === \"timed\" ? playerTime[2] : null}\r\n              />\r\n\r\n              <div className=\"bg-card rounded-lg p-4 shadow-md\">\r\n                <h2 className=\"text-xl font-semibold mb-3\">Game Rules</h2>\r\n                <ul className=\"list-disc pl-5 space-y-2 text-sm\">\r\n                  <li>Move one space horizontally or vertically to an empty space</li>\r\n                  <li>Capture opponent pieces by jumping over them to an empty space</li>\r\n                  <li>Multiple captures in one turn are allowed with the same piece</li>\r\n                  <li>Win by capturing all opponent pieces or blocking all their moves</li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"bg-card rounded-lg p-4 shadow-md\">\r\n                <h2 className=\"text-xl font-semibold mb-3\">Game Stats</h2>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  <div className=\"text-sm\">Black pieces:</div>\r\n                  <div className=\"text-sm font-medium\">{player1Pieces}</div>\r\n                  <div className=\"text-sm\">White pieces:</div>\r\n                  <div className=\"text-sm font-medium\">{player2Pieces}</div>\r\n                  <div className=\"text-sm\">Captures (Black):</div>\r\n                  <div className=\"text-sm font-medium\">{scores[1]}</div>\r\n                  <div className=\"text-sm\">Captures (White):</div>\r\n                  <div className=\"text-sm font-medium\">{scores[2]}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {showGameOver && (\r\n        <GameOverModal\r\n          winner={players[winner! - 1]}\r\n          onRestart={restartGame}\r\n          onSettings={() => {\r\n            setShowGameOver(false)\r\n            setShowSettings(true)\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3081, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Projects/shax-game/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport Game from \"@/components/Game\"\n\n\nexport default function HomePage() {\n  return (\n    <main className=\"min-h-screen bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\n      <Game />\n    </main>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,0HAAA,CAAA,UAAI;;;;;;;;;;AAGX","debugId":null}}]
}